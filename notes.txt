usage of Django’s authentication system in its default configuration.

create environment 

python3 -m pip install --user --upgrade pip
python3 -m pip --version
source env/bin/activate
django-admin startproject core .
python3 startapp inventory
python3 manage.py startapp inventory

python3 manage.py migrate

intall vscode extentions
sudo apt install sqlite3

create user using shell!!


10:00
Commom authorisation methodologies
Role-based access controls (RBAC)
ATribute-based access control (ABAC)

capture of DML Database
with superuser permission add view user to staff...autmaticly staff is able to see our user.

#create inventory models
#makemigrations
#migrate

#add models in admin panel

#maximun recursion error
using tow ** in place of one

#disabled permissions to edit some sort of fields in admin modeule


#implementation django object permission with
django guardian

pip install django-guardian
#add in installed APPS 

# hook guardian’s authentication backend
AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend', # this is default
    'guardian.backends.ObjectPermissionBackend',
)

#migrate
#add model in admin #two differents ways

#activate guardian


#add staff with permissions to product_1 
#let the staff go inside admin panel, just for products models

#has module permissions time 11:20

 #why we do that? we don't want to granted access to model, we want to granted access to object permission

 #add and remove model permissions

 #minuto 38 #next task
 show product that has permisiions but doesn't show otherwise.